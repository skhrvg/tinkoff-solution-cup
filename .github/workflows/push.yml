name: Push Image

on:
  release:
    types: [released, prereleased]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

permissions:
  contents: read
  packages: write

jobs:
  checks:
    name: Checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
      - uses: actions/setup-node@v3
        with:
          node-version: 19
      - name: Install dependencies
        run: pnpm install
      - name: Lint with ESLint
        run: pnpm lint
      - name: Type check
        run: pnpm type-check
      - name: Build
        run: pnpm build-only

  push:
    name: Push Image
    runs-on: ubuntu-latest
    needs: checks
    steps:
      - uses: actions/checkout@v3
      - name: Get branch and sha
        id: vars
        shell: bash
        run: |
          echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
          echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - if: ${{ github.event.release.prerelease }}
        name: Build and push Docker image @next
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.vars.outputs.sha_short }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:next
      - if: ${{ !github.event.release.prerelease }}
        name: Build and push Docker image @latest
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.vars.outputs.sha_short }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
